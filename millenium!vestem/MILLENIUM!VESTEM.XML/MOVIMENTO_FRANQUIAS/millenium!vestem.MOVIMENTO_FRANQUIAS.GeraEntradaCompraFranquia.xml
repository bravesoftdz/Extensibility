<?xml version="1.0"?>
<root>
  <OBJECT NAME="MOVIMENTO_FRANQUIAS">
    <METHOD NAME="GeraEntradaCompraFranquia" DESCRIPTION="" VERSION="136" THREADSAFE="0">
      <PARAMS>
        <GROUPS>
          <GROUP/>
        </GROUPS>
        <PARAM NAME="COD_OPERACAO" FORMAT="N" SIZE="8" FLAGS="1" DEFAULT="143007" PROJECTION="0" ORDER="1" FIELDLABEL="Cod Operacao" CTAB="0"/>
      </PARAMS>
      <FIELDS/>
      <ACTIONSCRIPT>
/*
Criar paramentro para
  evento - fixo
  CFOP - busca do evento
  conta - busca da filial
  plano de contas busca do evento
*/

#PRIVATE() #CALL:CFG_EV_COMPRA MILLENIUM.CONFIGURACOES.LERPARAM ( 'EVL_COMPRA_EVENTO_FRANQUIA', 'I' );

//Consulta a filial do franqueado
#PRIVATE()
SELECT:FILIAL_FRANQUIA
   F.FILIAL
  ,F.CONTA
  ,F.IE
  ,F.CENTRO_CUSTOS
  ,S.MODALIDADE_FRETE
  ,(SELECT FIRST 1 EC.CFOP_ESTAD AS CFOP FROM EVENTOS_CFOP EC WHERE EC.EVENTO = :CFG_EV_COMPRA.VALOR_I AND EC.FILIAL = F.FILIAL) AS CFOP
  ,(SELECT PCONTA FROM EVENTOS EV WHERE EV.EVENTO = :CFG_EV_COMPRA.VALOR_I) AS PCONTA
FROM SAIDAS S
  INNER JOIN CLIENTES C ON C.CLIENTE = S.CLIENTE
  INNER JOIN FILIAIS  F ON F.GERADOR = C.GERADOR
WHERE S.SAIDA = :COD_OPERACAO;

//Consulta o fornecedor franqueador
#PRIVATE()
SELECT:FORNECEDOR_FRANQUIA
  FO.FORNECEDOR
FROM SAIDAS S
  INNER JOIN FILIAIS      F  ON F.FILIAL   = S.FILIAL
  INNER JOIN FORNECEDORES FO ON FO.GERADOR = F.GERADOR
WHERE S.SAIDA = :COD_OPERACAO;

//Consulta o pedido do movimento de origem
#PRIVATE()
SELECT:PV
  DISTINCT PE.PEDIDO AS PEDIDOV
FROM PRODUTOS_EVENTOS PE
  INNER JOIN PRODUTOS P ON P.PRODUTO = PE.PRODUTO
WHERE PE.TIPO_OPERACAO = 'S'
  AND PE.COD_OPERACAO  = :COD_OPERACAO;

//Consulta os produtos do movimento de origem
#PRIVATE()
SELECT:PRODUTOS_FRANQUIA
  PE.PRODUTO
 ,PE.COR
 ,PE.ESTAMPA
 ,PE.TAMANHO
 ,PE.ITEM
 ,PE.QUANTIDADE
 ,PE.PRECO
 ,PE.PRECO_APLICADO
 ,PE.PRECO_BRUTO
 ,PE.PRECO_TOTAL
 ,#REPLACE(:FILIAL_FRANQUIA.CFOP) AS CFOP
 ,PE.NOTA
 ,PE.ICM
 ,PE.BICM
 ,PE.V_ICMS
 ,'IIPC' AS NCREDITA_IMP
 ,PE.IPI
 ,PE.BICMSUB
 ,PE.ICMSS
 ,PE.V_ICMSS
 ,PE.V_IPI
 ,PE.BIPI
 ,ICM_ORIG
 ,ICM_ORIG
 ,BICM_ORIG
 //,PE.NOTA_REF
 //,PE.TIPO_OPERACAO_REF
 //,PE.COD_OPERACAO_REF
 ,PE.UNIDADE_CONVERSAO AS UNIDADE
 ,P.TIPO_PROD AS TIPO
FROM PRODUTOS_EVENTOS PE
  INNER JOIN PRODUTOS P ON P.PRODUTO = PE.PRODUTO
WHERE PE.TIPO_OPERACAO = 'S'
  AND PE.COD_OPERACAO  = :COD_OPERACAO;

//Consulta os titulos gerados para o franqueado
SELECT:LANCAMENTOS_FRANQUIA
  L1.N_DOCUMENTO AS DOCUMENTO
 ,L1.DATA_EMISSAO
 ,L1.DATA_VENCIMENTO
 ,(L1.VALOR_INICIAL*-1) AS VALOR_INICIAL
 ,L1.TIPO_PGTO
 ,L1.TITULO
 ,FL.FILIAL
 ,FL.CONTA
 ,L1.PERCENTUAL_JUROS
 ,L1.VALOR_JUROS
 ,ABS(L1.VALOR_CALCULADO) AS VALOR_CALCULADO
FROM LANCAMENTOS L1
  INNER JOIN CLIENTES C ON C.CLIENTE = L1.COD
  INNER JOIN FILIAIS FL ON FL.GERADOR = C.GERADOR
WHERE L1.TIPO_ORIGEM='S'
  AND L1.ORIGEM=:COD_OPERACAO
  AND L1.IMPOSTO IS NULL;

//Consulta a NF gerada para o franqueado
SELECT:NOTA_FRANQUIA
  NOTA
 ,ICMS
 ,V_ICMS
//,#REPLACE(:FILIAL_FRANQUIA.CFOP) AS NATUREZA_OPERACAO
 ,VALOR
 ,IPI
 ,V_IPI
 ,ICMSS
 ,V_ICMSS
 ,SEQUENCIA
 ,NUMERO_NOTA
 ,SERIE
 ,DATA
 ,"E" AS TIPO_NOTA
 ,V_ISS
 ,B_ISS
 ,MODELO
 ,OBS
 //,NROECF_IMPR
 //,N_FABR_IMPR
 //,V_PIS
 //,B_PIS
 //,V_COFINS
 //,B_COFINS
 //,ABAT_PIS_COFINS
 //,PIS
 //,COFINS
 //,DESC_SUFRAMA
 //,ICMSSE
 //,IMPOSTO_IMPORTACAO
 //,B_IMPOSTO_IMPORTACAO
 //,V_IMPOSTO_IMPORTACAO
 //,PIS_IMPORTACAO
 //,B_PIS_IMPORTACAO
 //,V_PIS_IMPORTACAO
 //,COFINS_IMPORTACAO
 //,B_COFINS_IMPORTACAO
 //,V_COFINS_IMPORTACAO
 //,SISCOMEX
 //,B_SISCOMEX
 //,V_SISCOMEX
 //,CPF
 //,F.CNPJ
   //,'L' AS TIPO_GERADOR_IG
   //,:FILIAL_FRANQUIA.IE AS IE_IG
 ,NAOCONTRIBUINTE_ICMS_IG
 ,IPI_NAOINCIDE_ICMS_IG
 ,B_IPI_AGR_IMPORTACAO
 ,V_IPI_AGR_IMPORTACAO
 ,ICMSS_ANT
 ,V_ICMSS_ANT
 ,USA_IVA_COLB
 //,UFEMBARQUE_EXPORT
 //,LOCEMBARQUE_EXPORT
 //,CONTING_FILIAL
 //,CONTING_JUSTIFICATIVA
 ,CANCELADA
 ,ND_PISCOFINS_BICMS
 ,IDNFE
 ,IPI_NC
 ,V_IPI_NC
 ,ICMS_NC
 ,V_ICMS_NC
 ,ENDERECO_PRESENTE
 ,NOTA_PRESENTE
   //,'S' AS REGIME_UTILIZADO  //pendente adicionar regime de enquagramento
 ,OBS_ESTORNO
 ,CODRE_ISS_RET
 ,CODRE_INSS_RET
 ,CODRE_COFINS_RET
 ,CODRE_PIS_RET
 ,CODRE_CSSL_RET
 ,CODRE_IRRF_RET
 ,B_ISS_RET
 ,V_ISS_RET
 ,DTVEN_ISS_RET
 ,B_INSS_RET
 ,V_INSS_RET
 ,DTVEN_INSS_RET
 ,B_COFINS_RET
 ,V_COFINS_RET
 ,DTVEN_COFINS_RET
 ,B_PIS_RET
 ,V_PIS_RET
 ,DTVEN_PIS_RET
 ,B_CSSL_RET
 ,V_CSSL_RET
 ,DTVEN_CSSL_RET
 ,B_IRRF_RET
 ,V_IRRF_RET
 ,DTVEN_IRRF_RET
 ,COD_SERVICO_DES
 ,DATA_CANCELOU
 //,STATUS
 //,IDPROTOCOLO
 //,MENSAGEMNFE
 //,NAOINCIDE_FRETEIPI
 //,NAOINCIDE_FRETESUBST_ICMS
 //,AFRMM
 //,B_AFRMM
 //,V_AFRMM
 //,MOD_B20K
 //,NECF_B20L
 //,NCOO_B20M
 //,TIPO_CTE
 //,IND_NAT_FRT
 //,NAOINCIDE_SEGUROIPI
 //,NAOINCIDE_DESPESASIPI
 //,REF_DATA
 //,REF_CUF
 //,REF_CNPJ
 //,REF_SERIE
 //,REF_NNF
 //,V_FCP_UF_DEST
 //,V_ICMS_UF_DEST
 //,V_ICMS_UF_REMET
 //,IE_ST_FILIAL
 //,CALCULAR_PARTILHA
 //,ZERARPARTILHA_REMET
 //,CONTRIBUINTE
 //,IDNFE_REF
 //,CESTA_BASICA
 //,TOTAL_ICMSS_SEP
 //,IDRECIBO
 //,NOTA_ENTREGA_CONTA_ORDEM
 //,ENDERECO_ENTREGA_CONTA_ORDEM
 //,V_FCP
 //,V_FCPST
 //,V_FCPSTRET
 //,TRUE  AS IMPORTXML
 ,TRUE  AS USUARIO
FROM NF N1
  INNER JOIN SAIDAS       S ON S.SAIDA = N1.COD_OPERACAO
  INNER JOIN FILIAIS      F  ON F.FILIAL = S.FILIAL
  INNER JOIN FORNECEDORES FO ON FO.GERADOR = F.GERADOR
WHERE N1.CANCELADA = 'F'
  AND N1.TIPO_OPERACAO = 'S'
  AND N1.COD_OPERACAO  = :COD_OPERACAO;

#CALL:MOVIMENTACAO_SAIDA millenium.MOVIMENTACAO.CONSULTA(TIPO_OPERACAO='S',COD_OPERACAO=:COD_OPERACAO,UJUROS=FALSE);

#CALL:EVL_ROMANEIO MILLENIUM.UTILS.DEFAULT( NOME="ROMANEIO", TAMANHO=6);

#CALL:MOVIMENTACAO_ENTRADA MILLENIUM.MOVIMENTACAO.EXECUTA(
  //EVENTO                 =1000105
  EVENTO                   =:CFG_EV_COMPRA.VALOR_I
  ,CONDICOES_PGTO          =:MOVIMENTACAO_SAIDA.CONDICOES_PGTO
//,N_OPERACAO              =#REPLACE(:FILIAL_FRANQUIA.CFOP)
//,N_OPERACAO              =1000121
  ,CONTA                   =:FILIAL_FRANQUIA.CONTA
  ,PCONTA                  =:FILIAL_FRANQUIA.PCONTA
  ,ROMANEIO                =:EVL_ROMANEIO.RESULT
  ,DATA                    =:MOVIMENTACAO_SAIDA.DATA
  ,OBS                     =:MOVIMENTACAO_SAIDA.OBS
  ,TRANSPORTADORA          =:MOVIMENTACAO_SAIDA.TRANSPORTADORA
  ,TOTAL                   =:MOVIMENTACAO_SAIDA.TOTAL
  ,V_FRETE                 =:MOVIMENTACAO_SAIDA.V_FRETE
  ,V_SEGURO                =:MOVIMENTACAO_SAIDA.V_SEGURO
  ,ACERTO                  =:MOVIMENTACAO_SAIDA.ACERTO
  ,V_ACERTO                =:MOVIMENTACAO_SAIDA.V_ACERTO
  ,PESO_L                  =:MOVIMENTACAO_SAIDA.PESO_L
  ,PESO_B                  =:MOVIMENTACAO_SAIDA.PESO_B
  ,VOLUME                  =:MOVIMENTACAO_SAIDA.VOLUME
  ,ESPECIE_VOLUME          =:MOVIMENTACAO_SAIDA.ESPECIE_VOLUME
  ,QTDE                    =:MOVIMENTACAO_SAIDA.QTDE
  ,VALOR_FINAL             =:MOVIMENTACAO_SAIDA.VALOR_FINAL
  ,CORTESIA                =:MOVIMENTACAO_SAIDA.CORTESIA
  ,DESPESAS_ACES           =:MOVIMENTACAO_SAIDA.DESPESAS_ACES
  ,CIF_FOB                 =:MOVIMENTACAO_SAIDA.CIF_FOB
  ,USUARIO                 =:MOVIMENTACAO_SAIDA.USUARIO
  ,DATA_BASE               =:MOVIMENTACAO_SAIDA.DATA_BASE
  ,DATA_ATUALIZACAO        =:MOVIMENTACAO_SAIDA.DATA_ATUALIZACAO
  ,SAIDA_REF               =:MOVIMENTACAO_SAIDA.SAIDA_REF
  ,N_DOCEXTERNO            =:MOVIMENTACAO_SAIDA.N_DOCEXTERNO
  ,FILIAL                  =:FILIAL_FRANQUIA.FILIAL
  ,FORNECEDOR              =:FORNECEDOR_FRANQUIA.FORNECEDOR
  ,PRODUTOS                =:PRODUTOS_FRANQUIA
  ,LANCAMENTOS             =:LANCAMENTOS_FRANQUIA
  ,NOTAS                   =:NOTA_FRANQUIA
  ,MODALIDADE_FRETE        =0
  ,NUMERACAO_NOTA_AUTO     =FALSE
);

//Atualiza movimentos
#CALL MILLENIUM!VESTEM.MOVIMENTO_FRANQUIAS.ATUALIZARENTRADA(:MOVIMENTACAO_ENTRADA.COD_OPERACAO,:PV.PEDIDOV);
#CALL MILLENIUM!VESTEM.MOVIMENTO_FRANQUIAS.ATUALIZARNOTA(:MOVIMENTACAO_ENTRADA.COD_OPERACAO);
#CALL MILLENIUM!VESTEM.MOVIMENTO_FRANQUIAS.ATUALIZARITENS(:MOVIMENTACAO_ENTRADA.COD_OPERACAO,:COD_OPERACAO);
#CALL MILLENIUM!VESTEM.MOVIMENTO_FRANQUIAS.ATUALIZARORIGEM(:COD_OPERACAO);

</ACTIONSCRIPT>
    </METHOD>
  </OBJECT>
</root>